/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import backendcontrollers.CashBillController;
import backendcontrollers.CustomerController;
import functions.CustomerTableRender;
import functions.Validator;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.CashBill;
import model.Customer;

/**
 *
 * @author Sameera
 */
public class FormSelectCashBill extends javax.swing.JDialog {

    /**
     * Creates new form FormCustomer
     */
    private DefaultTableModel tableModel;
    private String searchBy = "CashBillNo";
    public double invoiceAmount;
    private boolean isSearchOnly;

    private SimpleDateFormat dateFormat;

    public FormSelectCashBill(java.awt.Frame parent, boolean modal, boolean isSearchOnly) {
        super(parent, modal);
        initComponents();
        this.isSearchOnly = isSearchOnly;
        if (isSearchOnly) {
            btnSelect.setVisible(false);
        }
        tableModel = (DefaultTableModel) tblCashBill.getModel();
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(JLabel.RIGHT);
        tblCashBill.getColumnModel().getColumn(3).setCellRenderer(cellRenderer);
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCashBill = new javax.swing.JTable();
        btnSelect = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearchText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204), 2));

        jLabel2.setBackground(new java.awt.Color(153, 153, 255));
        jLabel2.setFont(new java.awt.Font("Courier New", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cash Bills");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setOpaque(true);

        tblCashBill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCashBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cash bill no", "InvoiceNo", "Create Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCashBill.setRowHeight(25);
        tblCashBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCashBillMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCashBill);
        if (tblCashBill.getColumnModel().getColumnCount() > 0) {
            tblCashBill.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblCashBill.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblCashBill.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblCashBill.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        btnSelect.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSelect.setForeground(new java.awt.Color(0, 51, 153));
        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 153));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSearch.setText("Cash bill no :");

        txtSearchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        showAllCashBills();
        txtSearchText.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtSearchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchTextKeyReleased
        // TODO add your handling code here:
        searchCashBill();
    }//GEN-LAST:event_txtSearchTextKeyReleased

    private void tblCashBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCashBillMouseClicked
        // TODO add your handling code here:
        if (!isSearchOnly) {
            if (evt.getClickCount() == 2) {
                selectCashBill();
            }
        }

    }//GEN-LAST:event_tblCashBillMouseClicked

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here:
        if (!isSearchOnly) {
            selectCashBill();
        }

    }//GEN-LAST:event_btnSelectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch;
    public static javax.swing.JTable tblCashBill;
    private javax.swing.JTextField txtSearchText;
    // End of variables declaration//GEN-END:variables

    private void showAllCashBills() {
        try {
            tableModel.setRowCount(0);
            ArrayList<CashBill> allCashBills = CashBillController.getAllCashBills();
            for (CashBill cashBill : allCashBills) {
                try {
                    Date parse = dateFormat.parse(cashBill.getTrnDate());
                    String date = dateFormat.format(parse);
                    tableModel.addRow(new Object[]{cashBill.getCashBillNo(), cashBill.getInvoiceNo(), date, Validator.BuildTwoDecimals(cashBill.getAmount())});
                } catch (ParseException ex) {
                    Logger.getLogger(FormSelectCashBill.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormSelectCashBill.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormSelectCashBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchCashBill() {
        tableModel.setRowCount(0);
        try {
            if (!txtSearchText.getText().isEmpty()) {
                String text = txtSearchText.getText().trim();
                ArrayList<CashBill> allCashBills = CashBillController.searchCashBills(text);

                for (CashBill cashBill : allCashBills) {
                    try {
                        Date parse = dateFormat.parse(cashBill.getTrnDate());
                        String date = dateFormat.format(parse);
                        tableModel.addRow(new Object[]{cashBill.getCashBillNo(), cashBill.getInvoiceNo(), date, Validator.BuildTwoDecimals(cashBill.getAmount())});
                    } catch (ParseException ex) {
                        Logger.getLogger(FormSelectCashBill.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } else {
                showAllCashBills();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormSelectCashBill.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormSelectCashBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void selectCashBill() {

        if (tblCashBill.isRowSelected(tblCashBill.getSelectedRow())) {
            String cashBillNo = tableModel.getValueAt(tblCashBill.getSelectedRow(), 0).toString();
            double recived = Double.parseDouble(tableModel.getValueAt(tblCashBill.getSelectedRow(), 3).toString());
            FormPayment.setCashBillPayment(cashBillNo, recived);
            this.dispose();

        } else {
            JOptionPane.showMessageDialog(this, "Please select a cash bill .", "No selcted a cash bill", JOptionPane.INFORMATION_MESSAGE);
        }

    }
}
